services:
  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: helpdesk-mongodb-prod
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: helpdesk
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - helpdesk-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: helpdesk-server-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 8080
      MONGO_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD}@mongodb:27017/helpdesk?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      CORS_ORIGIN: ${CORS_ORIGIN:-https://yourdomain.com}
      AUTO_CLOSE_ENABLED: ${AUTO_CLOSE_ENABLED:-true}
      CONFIDENCE_THRESHOLD: ${CONFIDENCE_THRESHOLD:-0.85}
      STUB_MODE: ${STUB_MODE:-false}
      MAIL_FROM: ${MAIL_FROM:-noreply@yourdomain.com}
    ports:
      - "8080:8080"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - helpdesk-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8080/healthz', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        VITE_API_BASE: ${VITE_API_BASE:-https://yourdomain.com/api}
    container_name: helpdesk-client-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      server:
        condition: service_healthy
    networks:
      - helpdesk-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongodb_data:
    driver: local

networks:
  helpdesk-network:
    driver: bridge
